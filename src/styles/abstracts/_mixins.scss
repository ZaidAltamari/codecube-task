@mixin respond-to($breakpoint) {
	@if map-has-key($breakpoints, $breakpoint) {
		@media (max-width: map-get($breakpoints, $breakpoint)) {
			@content;
		}
	} @else {
		@warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. Available breakpoints are: #{map-keys($breakpoints)}.";
	}
}
@mixin respond-above($breakpoint) {
	@if map-has-key($breakpoints, $breakpoint) {
		@media (min-width: map-get($breakpoints, $breakpoint) + 1px) {
			@content;
		}
	} @else {
		@warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. Available breakpoints are: #{map-keys($breakpoints)}.";
	}
}
@mixin flex-center {
	display: flex;
	align-items: center;
	justify-content: center;
}
@mixin flex-between {
	display: flex;
	align-items: center;
	justify-content: space-between;
}
@mixin flex-start {
	display: flex;
	align-items: center;
	justify-content: flex-start;
}
@mixin flex-column-center {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}
// Button mixins
@mixin button-reset {
	background: none;
	border: none;
	padding: 0;
	margin: 0;
	cursor: pointer;
	font-family: inherit;
	font-size: inherit;
	line-height: inherit;
	color: inherit;
	text-decoration: none;
	outline: none;
	&:focus {
		outline: none;
	}
}
@mixin button-primary {
	background: $primary-gradient;
	color: $white;
	border: none;
	padding: $spacing-3 $spacing-6;
	border-radius: $border-radius-lg;
	font-weight: $font-weight-semibold;
	cursor: pointer;
	transition: $transition-base;
	&:hover:not(:disabled) {
		transform: translateY(-2px);
		box-shadow: $shadow-lg;
	}
	&:disabled {
		opacity: 0.6;
		cursor: not-allowed;
	}
}
@mixin input-base {
	width: 100%;
	padding: $spacing-3 $spacing-4;
	border: 2px solid $gray-200;
	border-radius: $border-radius-lg;
	font-size: $font-size-base;
	background: $white;
	transition: $transition-base;
	outline: none;
	&:focus {
		border-color: $primary-color;
		box-shadow: 0 0 0 3px rgba($primary-color, 0.1);
	}
	&::placeholder {
		color: $gray-400;
	}
	&:disabled {
		opacity: 0.6;
		cursor: not-allowed;
		background-color: $gray-50;
	}
}
@mixin card {
	background: $white;
	border-radius: $border-radius-xl;
	box-shadow: $shadow-lg;
	padding: $spacing-6;
	border: 1px solid $gray-200;
}
@mixin card-hover {
	transition: $transition-base;
	&:hover {
		transform: translateY(-4px);
		box-shadow: $shadow-xl;
	}
}
@mixin text-truncate {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}
@mixin text-gradient($gradient: $primary-gradient) {
	background: $gradient;
	background-clip: text;
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
}
@mixin loading-shimmer {
	background: linear-gradient(
		90deg,
		rgba($gray-200, 0.2) 25%,
		rgba($gray-300, 0.4) 37%,
		rgba($gray-200, 0.2) 63%
	);
	background-size: 400% 100%;
	animation: shimmer 1.4s ease infinite;
}
@keyframes shimmer {
	0% {
		background-position: 100% 50%;
	}
	100% {
		background-position: 0% 50%;
	}
}
@mixin visually-hidden {
	position: absolute !important;
	width: 1px !important;
	height: 1px !important;
	padding: 0 !important;
	margin: -1px !important;
	overflow: hidden !important;
	clip: rect(0, 0, 0, 0) !important;
	white-space: nowrap !important;
	border: 0 !important;
}
@mixin custom-scrollbar {
	&::-webkit-scrollbar {
		width: 8px;
		height: 8px;
	}
	&::-webkit-scrollbar-track {
		background: $gray-100;
		border-radius: $border-radius-base;
	}
	&::-webkit-scrollbar-thumb {
		background: $gray-300;
		border-radius: $border-radius-base;
		&:hover {
			background: $gray-400;
		}
	}
}
